generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Setting {
  id Int @id @default(1)

  activityType ActivityTextType @default(Playing)
  activityName String           @default("Discord")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ActivityTextType {
  Playing
  Streaming
  Listening
  Watching
  Competing
}

model Guild {
  guildID String @id

  reposts Repost[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Repost {
  cuid String @id @default(cuid())

  active Boolean

  allowContent     Boolean
  allowEmbeds      Boolean
  allowAttachments Boolean
  allowComponents  Boolean

  delay       Int
  mentions    String
  pinMessages Boolean

  sourceChannelID String
  sourceGuildID   String
  guild           Guild  @relation(fields: [sourceGuildID], references: [guildID], onDelete: Cascade)

  destinationType       DestinationType
  destionationChannelID String?
  destinationGuildID    String?

  destinationWebhookURL String?

  replacements Replacement[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([sourceGuildID, sourceChannelID])
}

model Replacement {
  cuid String @id @default(cuid())

  find    String @unique
  replace String

  Repost     Repost? @relation(fields: [repostCUID], references: [cuid], onDelete: Cascade)
  repostCUID String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum DestinationType {
  channel
  webhook
}
